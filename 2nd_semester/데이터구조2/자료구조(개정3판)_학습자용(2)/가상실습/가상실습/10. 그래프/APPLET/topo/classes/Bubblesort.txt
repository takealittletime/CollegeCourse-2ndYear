int topo_sort(int n)
{
	int i;
	StackType s;
	GraphNode *node;

	
	int *in_degree = (int *)malloc(n* sizeof(int));
	for(i = 0; i < n; i++)			
		in_degree[i] = 0;
	for(i = 0; i < n; i++){
		node = adj_list[i];
		while ( node != NULL ) {
			in_degree[node->vertex]++;
			node = node->link;
		}
	}
	
	init(&s);
	for(i = 0; i < n; i++){
		if( in_degree[i] == 0 ) push(&s, i);
	}
	
	while(!is_empty(&s)){
		int w;
		w = pop(&s);
		printf("%d", w);		
		node = adj_list[w];	
		while (node != NULL) {
			int u = node->vertex;
			in_degree[u]--;			
			if(in_degree[u] == 0) push(&s, u);
			node = node->link;   
		}
	}
	free(in_degree);
	return (i == n);	
}